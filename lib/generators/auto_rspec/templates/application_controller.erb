# frozen_string_literal: true

require 'rails_helper'

RSpec.describe <%= @class_name %>, type: :controller do
<% if @application_controller_matchers[:callbacks].present? %>
  describe 'callbacks' do
  <%- if @application_controller_matchers[:callbacks][:before].present? -%>
    <%- @application_controller_matchers[:callbacks][:before].each do |before_attribute| -%>
    it { is_expected.to use_before_action(:<%= before_attribute %>) }
    <%- end -%>
  <%- end -%>
  <%- if @application_controller_matchers[:callbacks][:after].present? -%>
    <%- @application_controller_matchers[:callbacks][:after].each do |after_attribute| -%>
      it { is_expected.to use_after_action(:<%= after_attribute %>) }
    <%- end -%>
  <%- end -%>
  <%- if @application_controller_matchers[:callbacks][:around].present? -%>
    <%- @application_controller_matchers[:callbacks][:around].each do |around_attribute| -%>
      it { is_expected.to use_around_action(:<%= around_attribute %>) }
    <%- end -%>
  <% end -%>
  end
<% end %>
<% if @application_controller_matchers[:routes].present? -%>
  describe 'routes' do
  <%- @application_controller_matchers[:routes].each do |route| -%>
    it { is_expected.to route(:<%= route.verb.downcase%>, '<%= route.path.spec.to_s.sub(/\(\.:format\)/, "") %>').to(action: :<%= route.requirements[:action] %>) }
  <%- end -%>
  end
<% end -%>
end
